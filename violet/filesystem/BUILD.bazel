# ðŸŒºðŸ’œ Violet: Extended standard library for C++26
# Copyright (c) 2025 Noelware, LLC. <team@noelware.org> & other contributors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

load("//buildsystem/bazel:cc.bzl", "cc_library", "cc_test")

cc_library(
    name = "path",
    srcs = select({
        "@platforms//os:linux": ["impl/path/linux.cpp"],
        "@platforms//os:macos": ["impl/path/macos.cpp"],
        "@platforms//os:windows": ["impl/path/windows.cpp"],
        "//conditions:default": [],
    }),
    hdrs = ["Path.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//violet",
        "//violet/container",
        "//violet/io:error",
        "//violet/support:stringref",
    ],
)

cc_test(
    name = "path_test",
    size = "small",
    srcs = ["tests/Path.test.cpp"],
    visibility = ["//visibility:public"],
    deps = [":path"],
)

cc_library(
    name = "file",
    srcs = select({
        "@platforms//os:linux": [
            "impl/dirs/unix.cpp",
            "impl/file/unix.cpp",
        ],
        "@platforms//os:macos": [
            "impl/dirs/unix.cpp",
            "impl/file/unix.cpp",
        ],
        "@platforms//os:windows": [
            "impl/dirs/windows.cpp",
            "impl/file/windows.cpp",
        ],
        "//conditions:default": [
            "impl/dirs/unsupported.cpp",
            "impl/file/unsupported.cpp",
        ],
    }),
    hdrs = ["File.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":path",
        "//violet",
        "//violet/io:error",
        "//violet/iter",
    ],
)

cc_library(
    name = "tempdir",
    srcs = select({
        "@platforms//os:linux": [
            "impl/tempdir/unix.cpp",
        ],
        "@platforms//os:macos": [
            "impl/tempdir/unix.cpp",
        ],
        "@platforms//os:windows": [
            "impl/tempdir/windows.cpp",
        ],
        "//conditions:default": [
            "impl/tempdir/unsupported.cpp",
        ],
    }),
    hdrs = ["TempDir.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":file",
        ":path",
        "//violet",
        "//violet/container:optional",
        "//violet/io:error",
        "//violet/sys:environment",
    ],
)
