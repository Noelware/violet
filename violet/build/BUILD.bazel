# ðŸŒºðŸ’œ Violet: Extended standard library for C++26
# Copyright (c) 2025 Noelware, LLC. <team@noelware.org> & other contributors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

load("@rules_cc//cc:defs.bzl", "cc_library")

genrule(
    name = "vergeninfo",
    outs = ["Info.h"],
    cmd = """set -euo pipefail

    version=$$(sed -nE 's/^STABLE_VIOLET_VERSION (.*)$$/\\1/p' < bazel-out/stable-status.txt)
    commit=$$(sed -nE 's/^STABLE_VIOLET_GIT_COMMIT (.*)$$/\\1/p' < bazel-out/stable-status.txt)
    build_timestamp=$$(sed -nE 's/^VIOLET_BUILD_TIMESTAMP (.*)$$/\\1/p' < bazel-out/volatile-status.txt)

    if [[ -z "$$version" || -z "$$commit" || -z "$$build_timestamp" ]]; then
        echo "fatal: cannot fetch variable" >&2
        exit 1
    fi

    cat > $@ <<EOF
// ðŸŒºðŸ’œ Violet: Extended standard library for C++26
// Copyright (c) 2025 Noelware, LLC. <team@noelware.org> & other contributors
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#pragma once

namespace Noelware::Violet {

/// Returns the version of Violet.
constexpr auto Version = "$$version";

/// Returns the Git commit hash.
constexpr auto GitCommit = "$$commit";

/// RFC3339-encoded string of the build timestamp.
constexpr auto BuildTimestamp = "$$build_timestamp";

} // namespace Noelware::Violet
EOF
    """,
    stamp = 1,
    visibility = ["//violet/build:__pkg__"],
)

cc_library(
    name = "info",
    hdrs = [":vergeninfo"],
    includes = ["."],
    visibility = ["//visibility:public"],
)
